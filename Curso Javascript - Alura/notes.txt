Anotações

!!... !! - Dicas de boas práticas.

JavaScipt é uma linguagem que além de ser padrão nos 
navegadores atuais, vem expandindo para outras áreas
como servidores, banco de dados e até plataformas de 
IOT.
    !!O ideal ao programar uma página web, é manter os
    códigos de HTML, CSS e JavaScipt em arquivos separados!!
    
    !!Como o navegador entende somente HTML, é preciso incluir
    no arquivo HTML as tags <script>... </script> para
    incluir um script de JavaScipt no código HTML. O atributo
    src pode ser usado para informar o endereço de um script
    JavaScipt em outro documento!!
    
    !!É sempre bom manter o console da página aberto para 
    monitorar erros, efetuar mudanças e testes na página!!

Comandos
    var <nomeVariavel> = <valor>;
        Define uma variável, variáveis em JavaScipt não são 
        tipadas, exemplo, para informar uma string basta 
        colocar o valor entre aspas ('simples' ou "duplas").

    function <nomeFuncao>(<parametros>){
        <codigoFuncao>;
    }
        Define uma função nomeada que pode ser chamade dentro do 
        código inumeras vezes.

        !!Esse mesmo código pode ser usado para definir uma função anônima, basta retirar o <nomeFuncao> do código, porém uma função anônima só será chamada na sua definição!! 

    alert(<mensagemOuValor>);
        Imprime em um pop-up a mensagem informada ou valor 
        informado.

    console.log(<mensagemOuValor>);
        Imprime no console da página no navegador a 
        mensagem ou valor informado.

    document;
        Imprime no console da página o DOM () da página.

    .querySelector(<valorOuTagOuClasse>);
        Busca o valor informado dentro da página.
    .querySelectorAll(<valorOuTagOuClasse>);
        Busca um grupo de valores na página, retorna um
        array.
        
        !!O ideal ao usar o querySelector, é efetuar a 
        busca pela classe, id ou seletor CSS, não por tags, 
        pois pode gerar confusão!!

        !!Para buscar uma classe no querySelector, informamos
        o nome da classe precedido de um ponto (.)!!

        !!Para buscar um id no querySelector, informamos
        o nome do id precedido de hashtag (#)!!

    .textContent
        É uma função usada para manipular textos.

    .createElement("<elemento>");
        É uma função usada para criar um novo elemento na página.

    .addEventListener(<evento>, <ação>);
        É usado para adicionar um ouvinte na página.

        ##Um ouvinte é como um vigia, ele aguarda que o evento infomado aconteça para executar algo##

    .appendChild(<elemento>);
        É usado para incluir como filho um elemento passado como parâmetro ao elemento associado.
    
    .style
        Permite acessar e alterar a propriedade style de 
        um elemento.

        !!Não é recomendado o uso excessivo da função 
        .style, o ideal é que qulquer mudança na parte 
        estética da página seja feito no arquivo de CSS!!

    .value
        Permite acessar o valor do elemento associado.
    
    .classList
        Acessa e lista as classes de um elemento.
    .classList.add
        Adiciona uma classe à um elemento.

        !!A função .classList.add pode ser usada para 
        incluir uma classe de CSS que irá alterar a 
        parte estética do elemento.
    
    .toFixed();
        Delimita o número de casas decimais de um número
        quebrado.

    .preventDefault();
        Previne que o elemento associado execute seu comportamento padrão.

        !!Sempre que for necessário acessar um evento de algum elemento do HTML, devemos informar que vamos acessalos através do parâmetro event, há formas de acessarmos tais eventos sem esse parâmetro, mas é boa prática utiliza-lo!!
    



